<project name="build-common"
  xmlns:ivy="antlib:org.apache.ivy.ant"
  >
	<!--
	  Master Template
	  Last updated 2008-11-19 1:01
  -->
  <taskdef 
    resource="org/apache/ivy/ant/antlib.xml" 
    uri="antlib:org.apache.ivy.ant"
  />

  <tstamp>
    <format property="now" pattern="yyyyMMdd-HHmmss"/>
  </tstamp>

  <property environment="env"/>
  
  <exec executable="hostname" outputproperty="host.name"/>
  
  <property name="build.id" value="${user.name}@${host.name}-${now}"/>
  
  <!-- default luntbuild name -->
  <property
    name="version" value="${buildVersion}"
  />
  
  <property
    name="spiralcraft-build" value="../../build/"
  />
  
  
  <property 
    name="build.name" value="spiralcraft-${module}-${version}-${build.id}"
  />
  <property name="manifest.class.path" value="" />
  <property name="spiralcraft.build" value="../../build"/>


  
  <target name="build" depends="clean,compile,jar,smoke" />
  
  <target name="clean">
    <mkdir dir="out"/>
    <delete>
      <fileset dir="out" includes="**/*"/>
    </delete>
  </target>

  <condition property="isIvy">
    <available file="ivy.xml"/>
  </condition>
  
  <condition 
    property="ivySettings" 
    value="ivy.lunt.settings.xml"
    else="ivy.settings.xml"
    >
    <and>
      <isset property="isIvy"/>
      <isset property="artifactsDir"/>
    </and>
      
  </condition>
  
  <target name="freshBuild"
    depends="resolve,build"
    >
    
  </target>
  
  <target name="resolve" 
    if="isIvy"
    >
    
    <ivy:configure file="${spiralcraft-build}${ivySettings}"/> 
    
    <ivy:retrieve pattern="${ivy.lib.dir}/[artifact].[ext]"/>
  </target>
      
  <target name="compile">
    <echo message= "build: ${build.name}"/>
    <javac 
      classpath="${classpath}"
      srcdir="source" 
      destdir="out"
      debug="true"
      deprecation="true"
      compiler="modern"
      fork="true"
      >
      <compilerarg value="-Xlint"/>
    </javac>
    
    <copy toDir="out"
      preservelastmodified="true"
      failonerror="true"
      >
      <fileset
        dir="source"
        excludes="**/*.class,**/*.java"
        >
        
      </fileset>
    </copy>
    
    <propertyfile file="out/build-${build.name}"/>
    <propertyfile file="build.name.local">
      <entry key="build.name" value="${build.name}"/>
    </propertyfile>
  </target>

	<condition property="isSmoke">
    <and>
      <available file="${spiralcraft.build}/lib/bsh.jar"/>
      <available file="smoke.bsh"/>
    </and>
	</condition>
	
  <target name="smoke" depends="jar" if="isSmoke">
    <java
      classpath="${spiralcraft.build}/lib/bsh.jar;lib/spiralcraft-${module}.jar;${classpath}"
      classname="bsh.Interpreter" 
      failonerror="true"
      fork="true"
      >
      <arg value="smoke.bsh"/>
    </java>
  </target>
  
  <target name="jar" depends="compile">
    <echo message= "jar: ${build.name}"/>
    <jar 
      destfile="lib/spiralcraft-${module}.jar" 
      basedir="out"
      level="9"
      >
      <Manifest>
        <attribute name="Class-Path" value="${manifest.class.path}"/>
        <attribute name="Main-Class" value="${manifest.main.class}"/>   
      </Manifest>
      <include name="build*"/>
      <include name="spiralcraft/**/*.class"/>
      <include name="spiralcraft/**/*.xml"/>
      <include name="spiralcraft/**/*.tgl"/>
      <include name="spiralcraft/**/*.webui"/>
      <include name="spiralcraft/**/*.ghtml"/>
      <include name="spiralcraft/**/*.properties"/>
    </jar>
  </target>

  <target name="doc" depends="build">
    <javadoc 
      classpath="source:${classpath}"
      sourcepath="source"
      packagenames="spiralcraft.**.**"
      header="spiralcraft-${module}-${version} API"
      destdir="docs/api"
      author="Spiralcraft, Inc."
      version="${version}-b${build.name}"
      use="true"
      windowtitle="spiralcraft-${module}-${version} API"
      doctitle="&lt;h1&gt;spiralcraft-${module}-${version} API&lt;/h1&gt;"
      maxmemory="90M"
      failonerror="true"
      >
      <bottom>Copyright 1998,2007 Michael Toth, Spiralcraft, Inc.
      </bottom>
    </javadoc>
  </target>
	
	<target name="ivyPublish" depends="doc,jar" if="isIvy">
    
    <ivy:publish pubrevision="${buildVersion}" resolver="luntlocal">
      <artifacts pattern="lib/[module].[ext]"/>
    </ivy:publish>
    
  </target>
  
  <target name="lunt" depends="freshBuild,jar,doc,ivyPublish">

	</target>
  
</project>

